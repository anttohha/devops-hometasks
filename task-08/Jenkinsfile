pipeline {
    agent any
    tools{
        go 'go'
    }
    stages {
        stage('Git') {
            steps {
                git 'https://github.com/anttohha/word-cloud-generator.git'
            }
        }
        stage('build ssh'){
            steps{
                sh '''export GOPATH=$WORKSPACE/go
                export PATH="$PATH:$(go env GOPATH)/bin"
                go get github.com/tools/godep
                go get github.com/smartystreets/goconvey
                go get github.com/GeertJohan/go.rice/rice
                go get github.com/wickett/word-cloud-generator/wordyapi
                go get github.com/gorilla/mux
                
                sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version
                
                GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v
                
                md5sum artifacts/word-cloud-generator
                gzip -f artifacts/word-cloud-generator'''
            }
        }
        
        stage('make test code'){
            steps{
                sh '''
                 make lint
                 make test '''
            }
        }
        
       
        
        stage('upload to nexus'){
            steps{
                nexusArtifactUploader artifacts: [[artifactId: 'world-cloud-generator', classifier: '', file: 'artifacts/word-cloud-generator.gz', type: 'gz']], credentialsId: 'nexus-creds', groupId: '1', nexusUrl: '192.168.33.90:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'world-cloud-build', version: '1.$BUILD_NUMBER'
            }
        }
        
        stage("deploy on staging.vm") {
			steps {
				sh ''' 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo service wordcloud stop
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo curl -u downloader:downloader  -X GET "http://192.168.33.90:8081/repository/world-cloud-build/1/world-cloud-generator/1.2/world-cloud-generator-1.2.gz" -o /opt/wordcloud/word-cloud-generator.gz 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo ls -l /opt/wordcloud 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo chmod +x /opt/wordcloud/word-cloud-generator
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.80 sudo service wordcloud start
                '''
			}
		}
		
		stage("Testing") {
			parallel {
				stage("test1") {
					steps {
					   sh '''
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.33.80:8888/version | jq '. | length'`
                        if [ "1" != "$res" ]; then
                        exit 99
                        fi
                        res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.30.80:8888/api | jq '. | length'`
                        if [ "7" != "$res" ]; then
                        exit 99
                        fi    
                        '''
					}
				}
				stage("test2T") {
					steps {
						   sh '''
                           res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.30.80:8888/version | jq '. | length'`
                           if [ "1" != "$res" ]; then
                           exit 99
                           fi
                           res=`curl -s -H "Content-Type: application/json" -d '{"text":"ths is a really really really important thing this is"}' http://192.168.30.80:8888/api | jq '. | length'`
                           if [ "7" != "$res" ]; then
                           exit 99
                           fi    
                           '''
					}
				}
				
			}
		}
		
		stage("Deploy to production.vm") {
			steps {
				sh ''' 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo service wordcloud stop
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo curl -u downloader:downloader  -X GET "http://192.168.30.90:8081/repository/world-cloud-build/1/world-cloud-generator/1.2/world-cloud-generator-1.2.gz" -o /opt/wordcloud/word-cloud-generator.gz 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo ls -l /opt/wordcloud 
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo gunzip -f /opt/wordcloud/word-cloud-generator.gz
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo chmod +x /opt/wordcloud/word-cloud-generator
                sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@192.168.33.85 sudo service wordcloud start
                '''
			}
		}
        
        
        
    }
}
